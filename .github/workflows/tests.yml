name: Testing shopping-experience

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true
      
      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      
      - name: Run golangci-lint
        run: golangci-lint run ./... --timeout=5m
  
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
          cache: true
      
      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage.out ./...
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create .env file
        run: touch .env
      
      - name: Set up Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: "2.28.0"
      
      - name: Create required Docker networks
        run: docker network create traefik-shared || true
      
      - name: Run integration tests
        run: docker-compose run --rm api go test -v -tags=integration ./tests/integration/...
  
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test, integration-test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: shopping-experience:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
